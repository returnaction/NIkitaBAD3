@model PropBet
@{
    ViewData["Title"] = "Play";
}

<div class="container">
    <partial name="_GamesLinks" />

    <hr />
    <div>

        <h2>World Bet</h2>

        @if (Model.ErrorMessage != null)
        {
            <p>@Model.ErrorMessage</p>
        }

        
       
        <div class="row">
            <form asp-action="Play">
                <input asp-for="@Model.Bet" name="bet" hidden />
                <input asp-for="@Model.RolledNumber" name="rolledNumber" hidden />

                 <div class="form-group">
                    <label>Min Bet</label>
                    <input for="minBet" name="minBet" type="number" min="5" max="1000" step="5"  value="@(TempData.ContainsKey("minBet") ? TempData["minBet"] : 5)"/>
                </div>

                <div class="form-group">
                    <label>Max Bet</label>
                    <input for="maxBet" name="maxBet" type="number" step="5" min="25" max="5000" value="@(TempData.ContainsKey("maxBet") ? TempData["maxBet"] : 200)"  />
                </div> 

                <div class="form-group">
                    <label>Increment</label>
                    @* redo this one *@
                    <select for="incrementBet" value="@(TempData.ContainsKey("incrementBet") ? TempData["incrementBet"] : 5)">
                        <option value="5" selected>5</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>

                <p>Bet: @Model.Bet</p>
                <p>Dice Roll: @Model.RolledNumber</p>

                

                <div class="form-group">
                    <label asp-for="@Model.Answer">Answer:</label>
                    <input asp-for="@Model.Answer" type="number" min="0" required autofocus />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit Answer</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Later insure that the max is not less than min *@
@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        var minInput = document.getElementById("min");
        var maxInput = document.getElementById("max");

        minInput.addEventListener("input", function () {
            // Ensure that the value of the "Max Bet" input is not lower than the value of the "Min Bet" input
            if (parseInt(maxInput.value) < parseInt(minInput.value)) {
                maxInput.value = minInput.value;
            }
        });

        maxInput.addEventListener("input", function () {
            // Ensure that the value of the "Max Bet" input is not lower than the value of the "Min Bet" input
            if (parseInt(maxInput.value) < parseInt(minInput.value)) {
                maxInput.value = minInput.value;
            }
        });
    });
</script> *@